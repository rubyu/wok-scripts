#!/usr/bin/wok -f

/** rank.wok
  * 
  * Usage:
  *   java -jar wok-0.1.0.jar -f rank.wok -v src=0 -v dst=1 -v grp=1 -v update=true -v@rawstr ranking=list.txt < input.tsv > output.tsv
  *
  * Option:
  *   -v src:               the index number of the source field
  *   -v dst:               the index number of the destination field
  *   -v grp:               the unit size to group members; this value must be larger than zero.
  *   -v@rawstr ranking:    path to the ranking file
  *   -v update:            whether or not update all cells in the column specified by `dst`
  */

FS = '\t'
FQ = Quote.Min
OFS = '\t'
OFQ = Quote.All

val rank = In.from(ranking) { _
  .zipWithIndex
  .map { case (row, i) => row(0) -> i }
  .toMap
}

In { _
  .filter (_ isDefinedAt src)
  .map (_.padTo(dst+1, ""))
  .map { row =>
    if (update || row(dst).isEmpty) {
      rank.get(row(src)) match {
        case Some(v) => row.updated(dst, s"${v / grp + 1}")
        case None => row
      }
    } else {
      row
    }
  }
  .foreach (row => println(row: _*))
}
