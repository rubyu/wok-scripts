#!/usr/bin/wok -f

/** custom-markup.KENE7J5.wok
  * 
  * This script makes changes to the search result for a word in Kenkyusha Shin EiWa Cyujiten (converted
  * to Epwing by dessed). The following changes will be applied to the data:
  *
  * 1. Add a class `pos` to lines start with "━ POS" (e.g, "━n.").
  * 2. Add a class `sense1` to lines start with upper case character (e.g, A).
  * 3. Add a class `sense2` to lines start with digit (e.g, 1).
  * 4. Add a class `sense3` to lines start with lower case character (e.g, a).
  *
  * Usage:
  *   java -jar wok-0.1.0.jar -f custom-markup.KENE7J5.wok -v idx=0 input > output
  *
  * Option:
  *   -v idx:  The index number of the target column.
  *
  * Note:
  *   This script works with or without elements that have a class `ebul`. So if you need, you can enable
  *   a query option `dc` for ebquery.
  */

FS = '\t'
FQ = Quote.Min
OFS = '\t'
OFQ = Quote.All

val p1 = """r>((<img alt="zB125" class="ebec" src="13F16D3D06DF13EF13B7DD0AD6C047C4.png">|━)((?!<br>).)+)<b""".r	// pos
val p2 = """r>((A|<span class="ebul">A</span>)( [^a-zA-Z]((?!<br>).)*)?)<b""".r	// sense1
val p3 = """r>(([B-Z]|<span class="ebul">[B-Z]</span>)( ((?!<br>).)*)?)<b""".r		// sense1
val p4 = """r>((\d+|<span class="ebul">\d+</span>)( ((?!<br>).)*)?)<b""".r		// sense2
val p5 = """r>((a|<span class="ebul">a</span>)( [^a-z]((?!<br>).)*)?)<b""".r		// sense3
val p6 = """r>(([b-z]|<span class="ebul">[b-z]</span>)( ((?!<br>).)*)?)<b""".r		// sense3

In { _ 
  .filter (_.size > 0)
  .map (_.padTo(idx+1, ""))
  .map { row =>
    var str = row(idx)
    str = p1.replaceAllIn(str, """r><span class="pos">$1</span><b""")
    str = p2.replaceAllIn(str, """r><span class="sense1">$1</span><b""")
    str = p3.replaceAllIn(str, """r><span class="sense1">$1</span><b""")
    str = p4.replaceAllIn(str, """r><span class="sense2">$1</span><b""")
    str = p5.replaceAllIn(str, """r><span class="sense3">$1</span><b""")
    str = p6.replaceAllIn(str, """r><span class="sense3">$1</span><b""")
    row.updated(idx, str)
  }
  .foreach (row => println(row: _*))
}
